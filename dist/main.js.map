{"version":3,"sources":["./src/app/models/bookTrackerError.ts","./src/app/core/book-tracker-error-handler.service.ts","./src/app/add-book/add-book.component.html","./src/app/add-book/add-book.component.ts","./src/app/core/http-cache.service.ts","./src/app/app.component.css","./src/app/data.ts","./src/environments/environment.ts","./src/app/edit-book/edit-book.component.ts","./src/app/core/badge.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/core/header-interceptor.service.ts","./src/app/add-reader/add-reader.component.html","./src/app/core/data.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/add-reader/add-reader.component.ts","./src/app/app.module.ts","./src/app/edit-reader/edit-reader.component.html","./src/app/edit-book/edit-book.component.html","./src/app/core/response-logger.service.ts","./src/app/core/cache.interceptor.ts","./src/app/edit-reader/edit-reader.component.ts","./src/app/core/books-resolver.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class BookTrackerError {\n  errorNumber: number;\n  message: string;\n  friendlyMessage: string;\n}","import { Injectable, ErrorHandler } from '@angular/core';\nimport { BookTrackerError } from 'app/models/bookTrackerError';\n\n@Injectable()\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\n\n  handleError(error: any): void {\n    let customError: BookTrackerError = new BookTrackerError();\n    customError.errorNumber = 200;\n    customError.message = (<Error>error).message;\n    customError.friendlyMessage = 'An error occurred. Please try again.';\n\n    console.log(customError);\n  }\n\n  constructor() { }\n\n}\n","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add New Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\n\nimport { Book } from \"app/models/book\";\nimport { DataService } from \"app/core/data.service\";\n\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styles: []\n})\nexport class AddBookComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() { }\n\n  saveBook(formValues: any): void {\n    let newBook: Book = <Book>formValues;\n    newBook.bookID = 0;\n    console.log(newBook);\n\n    this.dataService.addBook(newBook)\n      .subscribe(\n        (data: Book) => console.log(data),\n        (err: any) => console.log(err),\n        () => console.log('add book complete')\n      );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpCacheService {\n\n  private requests: any = {};\n\n  constructor() { }\n\n  //store a new request\n  put(url: string, response: HttpResponse<any>): void {\n    this.requests[url] = response;\n  }\n\n  //get existing request\n  get(url: string): HttpResponse<any> | undefined {\n    return this.requests[url];\r\n  }\n\n  //remove single entry\n  invalidateUrl(url: string): void {\n    this.requests[url] = undefined;\r\n  }\n\n  //remove all entries\n  invalidateCache(): void {\n    this.requests = {};\r\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\n\nexport const allReaders: Reader[] = [\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\n  ];\n\nexport const allBooks: Book[] = [\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\n    { bookID: 2, title: 'Winnie-the-Pooh', author: 'A. A. Milne', publicationYear: 1926 },\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Book } from 'app/models/book';\nimport { DataService } from 'app/core/data.service';\nimport { OldBook } from \"app/models/oldBook\";\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styles: []\n})\nexport class EditBookComponent implements OnInit {\n\n  selectedBook: Book;\n\n  constructor(private route: ActivatedRoute,\n              private dataService: DataService) { }\n\n  ngOnInit() {\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\n    //this.selectedBook = this.dataService.getBookById(bookID);\n    this.dataService.getBookById(bookID).\n      subscribe(\n        (data: Book) => this.selectedBook = data,\n        (err: any) => console.log(err),\n        () => console.log('get book complete')\n      );\n    this.dataService.getOldBookById(bookID).\n      subscribe(\n        (data: OldBook) => console.log(`Old book title: ${data.bookTitle}`),\n        (err: any) => console.log(err),\n        () => console.log('get old book complete')\n      );\n  }\n\n  setMostPopular(): void {\n    this.dataService.setMostPopularBook(this.selectedBook);\n  }\n\n  saveChanges(): void {\n    this.dataService.updateBook(this.selectedBook)\n      .subscribe(\n        (data: void) => console.log(`${this.selectedBook.title} updated successfully`),\n        (err: any) => console.log(err),\n        () => console.log('update book complete')\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BadgeService {\n\n  constructor() { }\n\n  getReaderBadge(minutesRead: number): string {\n\n    if (minutesRead > 5000) {\n      return 'Book Worm';\n    }\n    else if (minutesRead > 2500) {\n      return 'Page Turner';\n    }\n    else {\n      return 'Getting Started';\n    }\n    \n  }\n\n}\n","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n        <li *ngFor='let book of allBooks'>\\n          <i>{{book.title}}</i>\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\n        </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n        <li *ngFor='let reader of allReaders'>\\n          {{reader.name}}\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\n        </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HeaderInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      console.log(`HeaderInterceptor - ${req.url}`);\r\n\r\n      let jsonReq: HttpRequest<any> = req.clone({\r\n        setHeaders: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      return next.handle(jsonReq);\r\n    }\r\n\r\n}\r\n","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\n\nimport { allBooks, allReaders } from 'app/data';\nimport { Reader } from \"app/models/reader\";\nimport { Book } from \"app/models/book\";\nimport { BookTrackerError } from 'app/models/bookTrackerError';\nimport { OldBook } from \"app/models/oldBook\";\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http : HttpClient) { }\n\n  mostPopularBook: Book = allBooks[0];\n\n  setMostPopularBook(popularBook: Book): void {\n    this.mostPopularBook = popularBook;\n  }\n\n  getAllReaders(): Reader[] {\n    return allReaders;\n  }\n\n  getReaderById(id: number): Reader {\n    return allReaders.find(reader => reader.readerID === id);\n  }\n\n  getAllBooks(): Observable<Book[] | BookTrackerError> {\n    console.log('Get all books');\n    return this.http.get<Book[]>('/api/books')\n      .pipe(\n        catchError(err => this.handleHttpError(err))\n      );\n  }\n\r\n  handleHttpError(err: HttpErrorResponse): Observable<BookTrackerError> {\r\n    let dataError = new BookTrackerError();\r\n\r\n    dataError.errorNumber = 100;\r\n    dataError.message = err.statusText;\r\n    dataError.friendlyMessage = 'An error occured while retrieving data, please contact the help desk';\r\n\r\n    return throwError(dataError);\r\n  }\r\n\n  getBookById(id: number): Observable<Book> {\n    console.log(`get book ${id}`);\n    //let getHeaders: HttpHeaders = new HttpHeaders({\n    //  'Accept': 'application/json',\n    //  'Authorization': 'my-token'\n    //});\n\n    return this.http.get<Book>(`/api/books/${id}`, {\n      headers: new HttpHeaders({\n          'Accept': 'application/json',\n          'Authorization': 'my-token'\n        })\n     });\n  }\n\n  getOldBookById(id: number): Observable<OldBook> {\n    console.log(`get old book ${id}`);\n\n    return this.http.get<Book>(`/api/books/${id}`)\n      .pipe(\n        map(b => <OldBook>{\n          bookTitle: b.title,\n          year: b.publicationYear\n        }),\n        tap(classicBook => console.log(classicBook))\n      );\n  }\n\n  addBook(newBook: Book): Observable<Book> {\n    console.log(`add new book`);\n\n    return this.http.post<Book>(`/api/books`, newBook, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\r\n      })\n    });\n  }\n\n  updateBook(updatedBook: Book): Observable<void> {\n    console.log(`update book ${updatedBook.bookID}`);\n\n    return this.http.put<void>(`/api/books/${updatedBook.bookID}`, updatedBook, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\r\n      })\n    });\n  }\n\n  deleteBook(bookId: number): Observable<void> {\n    console.log(`delete book ${bookId}`);\n\n    return this.http.delete<void>(`/api/books/${bookId}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router'\n\nimport { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\nimport { DataService } from 'app/core/data.service';\nimport { BookTrackerError } from '../models/bookTrackerError';\r\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: []\n})\nexport class DashboardComponent implements OnInit {\n\n  allBooks: Book[];\n  allReaders: Reader[];\n  mostPopularBook: Book;\n\n  constructor(private dataService: DataService,\n              private title: Title,\n              private route: ActivatedRoute) { }\n  \n  ngOnInit() {\n    //this.dataService.getAllBooks()\n    //  .subscribe(\n    //    (data: Book[]) => this.allBooks = data,\n    //    (err: BookTrackerError) => console.log(err.friendlyMessage),\n    //    () => console.log('Get all books complete')\n    //  );\n    let resolvedData: Book[] | BookTrackerError = this.route.snapshot.data['resolvedBooks'];\n\n    if (resolvedData instanceof BookTrackerError)\r\n      console.log(`Dashboard component error: ${resolvedData.friendlyMessage}`);\n    else\n      this.allBooks = resolvedData;\n\n    this.allReaders = this.dataService.getAllReaders();\n    this.mostPopularBook = this.dataService.mostPopularBook;\n\n    this.title.setTitle(`Book Tracker`);\n  }\n\n  deleteBook(bookID: number): void {\n    this.dataService.deleteBook(bookID)\n      .subscribe(\n        (data: void) => {\n          let index: number = this.allBooks.findIndex(book => book.bookID === bookID);\n          this.allBooks.splice(index, 1);\n        },\n        (err: any) => console.log(err),\n        () => console.log('delete book complete')\n      );\n  }\n\n  deleteReader(readerID: number): void {\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","export default \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\n            </ul>\\n        </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\";","import { Component, OnInit } from '@angular/core';\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-add-reader',\n  templateUrl: './add-reader.component.html',\n  styles: []\n})\nexport class AddReaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  saveReader(formValues: any): void {\n    let newReader: Reader = <Reader>formValues;\n    newReader.readerID = 0;\n    console.log(newReader);\n    console.warn('Save new reader not yet implemented.');\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\"\n\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { AddReaderComponent } from './add-reader/add-reader.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditBookComponent } from './edit-book/edit-book.component';\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\nimport { BookTrackerErrorHandlerService } from './core/book-tracker-error-handler.service';\nimport { HeaderInterceptor } from './core/header-interceptor.service';\nimport { ResponseLoggerInterceptor } from './core/response-logger.service';\nimport { CacheInterceptor } from './core/cache.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AddBookComponent,\n    EditReaderComponent,\n    EditBookComponent,\n    AddReaderComponent\n  ],\n  providers: [\n    { provide: ErrorHandler, useClass: BookTrackerErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseLoggerInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true }\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader && selectedReader.name\\\" name=\\\"name\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader && selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader && selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\n          <div class=\\\"col-lg-8\\\">\\n            {{ currentBadge }}\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook && selectedBook.title\\\" name=\\\"title\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook && selectedBook.author\\\" name=\\\"author\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook && selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpEventType } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ResponseLoggerInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      console.log(`ResponseLoggerInterceptor - ${req.url}`);\r\n\r\n      return next.handle(req)\r\n        .pipe(\r\n          tap(event => {\r\n            if (event.type === HttpEventType.Response)\r\n              console.log(event.body);\r\n          })\r\n        )\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { HttpCacheService } from 'app/core/http-cache.service';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private cacheService: HttpCacheService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    //pass non-cache requests and invalidate cache\r\n    if (req.method !== 'GET') {\r\n      console.log(`Invalidating cahce: ${req.method} ${req.url}`);\r\n      this.cacheService.invalidateCache();\r\n      return next.handle(req);\r\n    }\r\n\r\n    //retrieve cached responses\r\n    let cachedResponse: HttpResponse<any> = this.cacheService.get(req.url);\r\n\r\n    //return cached responses\r\n    if (cachedResponse) {\r\n      console.log(`Returning cached response: ${cachedResponse.url}`);\r\n      console.log(cachedResponse);\r\n      return of(cachedResponse); //same as next.handle without the 'next' operator. Just shorthand if there is one unmutable response.\r\n    }\r\n\r\n    //send request to server to add responses to the cache\r\n    return next.handle(req)\r\n      .pipe(\r\n        tap(event => {\r\n          if (event instanceof HttpResponse) {\r\n            console.log(`Adding response to cache: ${req.url}`);\r\n            this.cacheService.put(req.url, event);\r\n          }\r\n        })\r\n      );\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Reader } from \"app/models/reader\";\nimport { DataService } from 'app/core/data.service';\nimport { BadgeService } from 'app/core/badge.service';\n\n@Component({\n  selector: 'app-edit-reader',\n  templateUrl: './edit-reader.component.html',\n  styles: [],\n  providers: [BadgeService]\n})\nexport class EditReaderComponent implements OnInit {\n\n  selectedReader: Reader;\n  currentBadge: string;\n\n  constructor(private route: ActivatedRoute,\n              private dataService: DataService,\n              private badgeService: BadgeService) { }\n\n  ngOnInit() {\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\n    this.selectedReader = this.dataService.getReaderById(readerID);\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\n  }\n\n  saveChanges() {\n    console.warn('Save reader not yet implemented.');\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Book } from 'app/models/book';\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BooksResolverService implements Resolve<Book[] | BookTrackerError> {\r\n  constructor(private dataService: DataService) { }\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Book[] | BookTrackerError> {\r\n    return this.dataService.getAllBooks()\r\n      .pipe(\r\n        catchError(err => of(err))\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\nimport { BooksResolverService } from './core/books-resolver.service';\r\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent, resolve: {resolvedBooks: BooksResolverService} },\n  { path: 'addbook', component: AddBookComponent },\n  { path: 'addreader', component: AddReaderComponent },\n  { path: 'editreader/:id', component: EditReaderComponent },\n  { path: 'editbook/:id', component: EditBookComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}